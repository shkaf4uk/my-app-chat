{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","images/photo_2020-10-31_20-36-09.jpg","components/Dialogs/Massage/Massage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","to","name","Massage","massage","src","avatar","alt","maxLength50","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","state","dialogPage","dialogElements","dialogs","map","el","index","massagesElements","massages","isAuth","dialogsItems","dataForm","sendMessageText","compose","connect","dispatch","store","auth","newMessage","addMassageActionCreator","Component","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qKCYpMC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,cAAC,IAAD,CAASC,GAAIL,EAAb,SAAoBD,EAAMO,UCRvB,MAA0B,sDCa1BC,EATC,SAACR,GACb,OACI,sBAAKG,UAAWC,IAAMK,QAAtB,UACI,qBAAKC,IAAKC,EAAQC,IAAK,WACtBZ,EAAMS,Y,kCC4BfI,EAAcC,YAAiB,IAY7BC,EAAkBC,YAAU,CAACC,KAAM,UAAjBD,EAVJ,SAAChB,GACjB,OAAO,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBC,UAAWC,IAC9ChB,KAAM,SAAUiB,SAAU,CAACC,IAAUZ,OAEhD,gDAMOa,EAzCC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,WACdC,EAAiBF,EAAMC,WAAWE,QAAQC,KAAI,SAACC,EAAIC,GAAL,OAC9C,cAAC,EAAD,CAAwB/B,GAAI+B,EAAO1B,KAAMyB,EAAGzB,MAA3B0B,MACjBC,EAAmBP,EAAMC,WAAWO,SAASJ,KAAI,SAACC,EAAIC,GAAL,OACjD,cAAC,EAAD,CAAqB/B,GAAI+B,EAAOxB,QAASuB,EAAGvB,SAA9BwB,MAOlB,OAAKjC,EAAMoC,OAGP,sBAAKjC,UAAWC,IAAM0B,QAAtB,UACI,qBAAK3B,UAAWC,IAAMiC,aAAtB,SACKR,IAEL,sBAAK1B,UAAWC,IAAM+B,SAAtB,UACI,8BAAMD,IACN,cAACnB,EAAD,CAAiBG,SAdP,SAACoB,GACnBtC,EAAMuC,gBAAgBD,EAASjC,QAC/BiC,EAASjC,OAAS,YAGI,cAAC,IAAD,CAAUC,GAAG,Y,QCA5BkC,sBACXC,aAfkB,SAACd,GACnB,MAAO,CACHC,WAAYD,EACZe,SAAUC,IAAMD,SAChBN,OAAQT,EAAMiB,KAAKR,WAIF,SAACM,GACtB,MAAO,CACHH,gBAAiB,SAACM,GAAD,OAAgBH,EAASI,YAAwBD,UCd1C,SAACE,GAO7B,OAP2C,uKAGnC,OAAKC,KAAKhD,MAAMoC,OACT,cAACW,EAAD,eAAeC,KAAKhD,QADI,cAAC,IAAD,CAAUM,GAAG,eAHT,GACX2C,IAAMF,aDiB3BP,CAGbd","file":"static/js/5.49e20aee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2MgDU\",\"dialogsItems\":\"Dialogs_dialogsItems__3-_gD\",\"dialog\":\"Dialogs_dialog__2Q_S-\",\"active\":\"Dialogs_active__3v28D\",\"massages\":\"Dialogs_massages__2dmep\",\"massage\":\"Dialogs_massage__3OWol\"};","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","export default __webpack_public_path__ + \"static/media/photo_2020-10-31_20-36-09.5dc06a6e.jpg\";","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\nimport avatar from '../../../images/photo_2020-10-31_20-36-09.jpg';\r\n\r\nconst Massage = (props) => {\r\n    return (\r\n        <div className={style.massage}>\r\n            <img src={avatar} alt={'avatar'} />\r\n            {props.massage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Massage;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Massage from './Massage/Massage';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../utils/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogPage;\r\n    let dialogElements = state.dialogPage.dialogs.map((el, index) => (\r\n        <DialogItem key={index} id={index} name={el.name}/>));\r\n    let massagesElements = state.dialogPage.massages.map((el, index) => (\r\n        <Massage key={index} id={index} massage={el.massage}/>));\r\n\r\n    const addNewMassage = (dataForm) => {\r\n        props.sendMessageText(dataForm.dialog)\r\n        dataForm.dialog = '';\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.massages}>\r\n                <div>{massagesElements}</div>\r\n                <DialogReduxForm onSubmit={addNewMassage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Write a massage...'} component={Textarea}\r\n                   name={'dialog'} validate={[required, maxLength50]}/>\r\n        </div>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(DialogsForm)\r\n\r\nexport default Dialogs;","import {addMassageActionCreator} from \"../../redux/dialogs_reducer\";\r\nimport store from \"../../redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state,\r\n        dispatch: store.dispatch,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageText: (newMessage) => dispatch(addMassageActionCreator(newMessage)),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent\r\n}"],"sourceRoot":""}